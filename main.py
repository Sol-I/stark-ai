#!/usr/bin/env python3
"""
Stark AI Agent - Main Entry Point
"""

import asyncio
import threading
import time
import logging
from server import run_server
from agent_core import AIAgent, add_activity_log

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('/root/stark/main.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


def start_server():
    """–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        add_activity_log("INFO", "–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞...")
        logger.info("Starting FastAPI server...")
        run_server()
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        add_activity_log("ERROR", error_msg)
        logger.error(error_msg)


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∞–≥–µ–Ω—Ç–∞"""
    add_activity_log("INFO", "–ó–∞–ø—É—Å–∫ Stark AI Agent")
    logger.info("üöÄ Stark AI Agent –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    print("=" * 50)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–π—Ç–∏–Ω–≥ –º–æ–¥–µ–ª–µ–π
    from config import MODEL_RANKING
    logger.info("üìä –†–µ–π—Ç–∏–Ω–≥ –º–æ–¥–µ–ª–µ–π:")
    for i, model in enumerate(MODEL_RANKING[:5], 1):
        status = "‚úÖ" if i == 1 else "üü°"
        model_info = f"{status} {i}. {model['provider']} - {model['params']}B –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"
        print(model_info)
        logger.info(model_info)

    print("=" * 50)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
    agent = AIAgent()

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    server_thread = threading.Thread(target=start_server, daemon=True)
    server_thread.start()

    add_activity_log("INFO", "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...")
    logger.info("–û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞...")
    await asyncio.sleep(5)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –º–æ–¥–µ–ª–µ–π (–∑–∞–≥–ª—É—à–∫—É)
    bg_task = asyncio.create_task(agent.background_model_checker())

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
    startup_info = [
        "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!",
        "üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://localhost:8000",
        "üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://94.228.123.86:8000",
        "ü§ñ Telegram –±–æ—Ç: –∞–∫—Ç–∏–≤–µ–Ω",
        "üîÑ –§–æ–Ω–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π: –û–¢–ö–õ–Æ–ß–ï–ù–ê",
        "üéØ –õ–æ–≥–∏–∫–∞: –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –º–æ–¥–µ–ª–µ–π",
        "‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C"
    ]

    for info in startup_info:
        print(info)
        logger.info(info)

    add_activity_log("INFO", "Stark AI Agent —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
    print("=" * 50)

    try:
        # –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–ª—É–∂–±—ã
        while True:
            await asyncio.sleep(60)

    except KeyboardInterrupt:
        add_activity_log("INFO", "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞...")
        bg_task.cancel()

    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}"
        add_activity_log("ERROR", error_msg)
        logger.error(error_msg)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        add_activity_log("INFO", "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
        print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}"
        add_activity_log("ERROR", error_msg)
        logger.error(error_msg)
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")