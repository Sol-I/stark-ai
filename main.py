# main.py
"""
Stark AI Agent - –≥–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ —Å–∏—Å—Ç–µ–º—ã
API: –ó–∞–ø—É—Å–∫ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Stark AI (–≤–µ–±-—Å–µ—Ä–≤–µ—Ä, Telegram –±–æ—Ç, AI —è–¥—Ä–æ)
–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏: –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è
"""

import asyncio
import threading
import logging

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import HOST, PORT

# –ò–º–ø–æ—Ä—Ç —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from database import add_activity_log

# –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã
from server import run_server
from telegram_bot import TelegramBot
from agent_core import AIAgent

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)


def start_server():
    """
    API: –ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    –í—Ö–æ–¥: None
    –í—ã—Ö–æ–¥: None (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤ –≤ –ø–æ—Ç–æ–∫–µ)
    –õ–æ–≥–∏–∫–∞: –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    """
    try:
        add_activity_log("INFO", f"–ó–∞–ø—É—Å–∫ FastAPI —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ {HOST}:{PORT}...", "system")
        logger.info(f"üöÄ Starting FastAPI server on {HOST}:{PORT}...")
        run_server(host=HOST, port=PORT)
    except ImportError as e:
        error_msg = f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)


def start_telegram_bot():
    """
    API: –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    –í—Ö–æ–¥: None
    –í—ã—Ö–æ–¥: None (–±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤ –≤ –ø–æ—Ç–æ–∫–µ)
    –õ–æ–≥–∏–∫–∞: –ò–º–ø–æ—Ä—Ç –∏ –∑–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    """
    try:
        add_activity_log("INFO", "–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...", "system")
        logger.info("ü§ñ Starting Telegram bot...")
        bot = TelegramBot()
        bot.run()  # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ polling
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)


async def main():
    """
    API: –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ Stark AI Agent
    –í—Ö–æ–¥: None
    –í—ã—Ö–æ–¥: None (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫)
    –õ–æ–≥–∏–∫–∞: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤, –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ –ø–æ—Ç–æ–∫–∞—Ö, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º
    """
    add_activity_log("INFO", "–ó–∞–ø—É—Å–∫ Stark AI Agent", "system")
    logger.info("üéØ Stark AI Agent –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    print("=" * 60)
    print("üöÄ STARK AI AGENT - MULTI-INTERFACE AI ASSISTANT")
    print("=" * 60)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏—Å—Ç–µ–º–µ
    try:
        agent = AIAgent()
        await agent.ensure_initialized()

        logger.info("üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ AI:")
        for i, model in enumerate(agent.model_ranking[:5], 1):
            status = "‚úÖ" if i == 1 else "üü°"
            model_info = f"{status} {i}. {model.get('name', 'Unknown')} - {model.get('api_provider', 'Unknown')}"
            print(f"   {model_info}")
            logger.info(model_info)
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –º–æ–¥–µ–ª–µ–π: {e}")

    print("=" * 60)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–≥–µ–Ω—Ç–∞
    try:
        agent = AIAgent()
        add_activity_log("INFO", "AI Agent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω", "system")
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AI Agent: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    server_thread = threading.Thread(
        target=start_server,
        daemon=True,
        name="FastAPI-Server"
    )
    server_thread.start()

    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    telegram_thread = threading.Thread(
        target=start_telegram_bot,
        daemon=True,
        name="Telegram-Bot"
    )
    telegram_thread.start()

    add_activity_log("INFO", "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...", "system")
    logger.info("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±–æ—Ç–∞...")

    # –î–∞–µ–º –≤—Ä–µ–º—è —Å–µ—Ä–≤–∏—Å–∞–º –Ω–∞ –∑–∞–ø—É—Å–∫
    await asyncio.sleep(3)

    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
    startup_info = [
        "‚úÖ –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê",
        f"üåê –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://{HOST}:{PORT}",
        "üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://94.228.123.86:8000",
        "ü§ñ Telegram –±–æ—Ç: –ó–ê–ü–£–©–ï–ù",
        "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤: –ê–ö–¢–ò–í–ï–ù",
        "üéØ AI –º–æ–¥–µ–ª–∏: –ì–û–¢–û–í–´ –ö –†–ê–ë–û–¢–ï",
        "‚èπÔ∏è  –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: Ctrl+C",
        "",
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:",
        "   - –ë—Ä–∞—É–∑–µ—Ä: http://94.228.123.86:8000",
        "   - Telegram: –ù–∞–π–¥–∏—Ç–µ @StarkAIBot",
        "   - API: POST /api/chat –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π"
    ]

    print("\n".join(startup_info))
    logger.info("Stark AI Agent —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

    for info in startup_info:
        if info and not info.startswith("   ") and "üí°" not in info:
            logger.info(info)

    print("=" * 60)
    add_activity_log("INFO", "Stark AI Agent —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω", "system")

    try:
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Ä–∞–±–æ—Ç—ã
        while True:
            await asyncio.sleep(1)

    except KeyboardInterrupt:
        add_activity_log("INFO", "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≥–µ–Ω—Ç–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "system")
        logger.info("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Stark AI Agent...")

    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ main: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)


if __name__ == "__main__":
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ main.py
    """
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        add_activity_log("INFO", "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º", "system")
        print("\nüëã Stark AI Agent –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
    except Exception as e:
        error_msg = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}"
        add_activity_log("ERROR", error_msg, "system")
        logger.error(error_msg)
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")